XCOMM platform:  $XFree86: xc/config/cf/DGUX.cf,v 1.1.1.3.2.13 1999/08/17 07:39:16 hohndel Exp $
/* Copyright Takis Psarogiannakopoulos <takis@dpmms.cam.ac.uk>
 * This is the DG/ux configuration file of X11R6.3
 * XFree86 Version 3.3.5 ix86 DG/ux Release 4.20 MU04
 * July 17 1999 (Connections type changes)
 */
#ifndef OSName
#define OSName			DefaultOSName
#endif
#ifndef OSMajorVersion
#define OSMajorVersion		DefaultOSMajorVersion
#endif
#ifndef OSMinorVersion
#define OSMinorVersion		DefaultOSMinorVersion
#endif
#ifndef OSTeenyVersion
#define OSTeenyVersion		DefaultOSTeenyVersion
#endif

/* Fallbacks */
#ifndef OSName
#define	OSName	DG/ux R4.20MU04
#endif
#ifndef OSMajorVersion
#define	OSMajorVersion	4
#endif
#ifndef OSMinorVersion
#define	OSMinorVersion	20
#endif
#ifndef OSTeenyVersion
#define	OSTeenyVersion	4
#endif

#ifndef OSVendor
#define OSVendor Data General Corporation
#endif

XCOMM operating system:	OSName (OSMajorVersion./**/OSMinorVersion./**/OSTeenyVersion)

#define i386Architecture
#define BootstrapCFlags		-DDGUX

/* Some stuff that all SVR4s ,so and DG/ux, should have */

#define SystemV4		YES
#ifndef HasLdRunPath
#define HasLdRunPath		YES
#endif
#define HasPoll			YES
#ifndef SVR4Architecture
#define SVR4Architecture
#endif
#ifndef PatheticCpp
#define PatheticCpp		YES
#endif
#define Malloc0ReturnsNull	YES		/* in case -lmalloc used */

/*
 * Here are the default paths to use tools for building.
 * Use links to make these tools visible as below,
 * or modify below the locations as you like.
 * Remeber that cpp below is pointing to elink so
 * if you using gcc-2.8.1 make sure that it is
 * installed also as elink gcc.
 */

#define ArCmdBase       /usr/bin/ar
#define AsCmd           /usr/bin/as
#define CppCmd          /usr/lib/cpp
#define LdCmd           /usr/bin/ld
#define LexCmd          /usr/bin/lex
#define CcCmd           /usr/local/bin/gcc      /* ?  -fpcc-struct-return */
#define UNCOMPRESSPATH  /usr/bin/uncompress
#define MakeCmd         /usr/local/bin/make
#define YaccCmd         /usr/bin/yacc
#define InstallCmd      /usr/bin/install   /* I use gnu install-sh */
#define LnCmd           ln -s
#define RanlibCmd true                         /* Or make a link ranlib->true */
#define CplusplusCmd    /usr/local/bin/g++


#ifndef MkdirHierCmd
#define MkdirHierCmd mkdir -p
#endif
/* Stuff for SVR4 4.0 */
#ifndef XawI18nDefines
#define XawI18nDefines          -DUSE_XWCHAR_STRING
#endif

/*
 * Define here your project root by
 * changing this.
 * Default is /usr/X11R6
 * My choice is:
 */

#if 0
#define ProjectRoot /usr/X11R6.3   /* Look also in site.def for the default */
#endif


/* Added for 3.3.5 */
#define HasMktemp YES

#define HasPutenv YES
#define HasVFork YES
#define HasVoidSignalReturn  YES
#define HasBsearch YES
#define HasSockets YES
#define BuildServer YES
#define HasSharedLibraries YES   /* to build shared libs */
#define HasGcc YES
#define HasGcc2 YES
#define HasGcc2ForCplusplus YES
#define HasCplusplus YES
#define HasGnuMake YES          /* Added for 3.2Xc */
#define UseGnuMalloc YES
#define GnuMallocLibrary -L/usr/local/lib -lmalloc
#define Malloc0ReturnsNull YES  /* Added for 3.2Xh,i... GNU does return 0 */
#define Malloc0ReturnsNullDefines -DMALLOC_0_RETURNS_NULL   /* define for GNU malloc X3.2i */
/*******TCL TK DEFINITIONS ***********/
#define HasTk  YES                 /* Comment out if you dont have this */
#define TkLibDir    /usr/X11R6.3/lib
#define TkIncDir    /usr/X11R6.3/include
#define TkLibName   tk8.0
#define HasTcl YES
#define TclLibName  tcl8.0
#define TclLibDir   /usr/X11R6.3/lib
#define TclIncDir   /usr/X11R6.3/include

#define SystemManDirectory /usr/local/man/X

#define ExtraLibraries -lelf -lgen -lresolv -lsocket -lnsl -lw

#define StandardDefines -DDGUX -DSVR4 -Di386 -D__ix86 -D_DGUX_SOURCE -D_LITTLE_ENDIAN -DPENTIUM_CHANGE

#ifndef HasGcc2
#define HasGcc2 YES     /* We suppose that your DG/ux has gcc-dg.2.8.1.3 */
#endif                  /* Do NOT use native DG/ux gcc, it is faulty in general */
#ifndef HasGcc
#define HasGcc HasGcc2
#endif

#define PositionIndependentCFlags -fPIC
#define PositionIndependentCplusplusFlags -fPIC

/*
 * To forceably build static libraries in addition to shared libraries,
 * we put this.
 */
#define ForceNormalLib          YES

#ifndef ToolkitStringsABIOptions
#define ToolkitStringsABIOptions -intelabi -earlyR6bc
#endif

#define DefaultCCOptions     /* -ansi -pedantic */
#define OptimizedCDebugFlags -O2  /* Add -g -mstandard for full debuging info */
#define OptimizedCplusplusDebugFlags
#define DebuggableCDebugFlags -g -mstandard
#define DebuggableCplusplusDebugFlags
#define SharedLibraryLoadFlags -G -z text

/*
 * The default optimisation flags for GCC 2.x.  -fno-strength-reduce is
 * here to work around a bug in -O2 for GCC 2.x on i386 platforms.
 * If you are using a version that doesn't have this bug, you can
 * uncomment the following line, and remove '-fno-strength-reduce'
 *
#define DefaultGcc2i386Opt      -O2 -fno-strength-reduce
 */

/* Compress all the Fonts */
#define CompressAllFonts        YES



/* Manual pages installed under their full names */

#define ExpandManNames          YES
#define CompressManPages        YES




/* Install with stripping before ? */
#define StripInstalledPrograms  YES

/* Server to Install */
#define XserverNeedsSetUID YES
#define InstallXserverSetUID YES


#ifndef ServerOSDefines
#define ServerOSDefines -DDDXTIME XFree86ServerOSDefines
#endif
#ifndef BuildDynamicLoading
#define BuildDynamicLoading NO
#endif
#if BuildDynamicLoading
#define ServerExtraSysLibs -ldl
#endif


/*
 * Streams connections were "broken" for DG/ux.
 * We activate sockets to be sure. The code for
 * STREAMS works in most SVR4s but not in
 * DG/ux...
 * But I "fix" that in XFree86-3.3.5.
 * So -DSTREAMSCONN works now OK also.
 * Switch the flag -DTCPCONN below to
 * -DSTREAMSCONN to allow STREAMS ioctls.
 * Takis, 21/Jul/1999
 *
 * NOTE:
 *     -DSTREAMSCONN = STREAMS ioctls
 *     -DTCPCONN = sockets
 * Do not define both,only one of the above.
 * PS:
 * I learned that BSD sockets perform better
 * in DG/ux than the streams.
 * Contact DG for a new "/usr/lib/tcpip.so"
 * if you insist to build with SVR4 streams.
 *
 */

#ifndef ConnectionFlags
#define ConnectionFlags	-DTCPCONN -DUNIXCONN -DLOCALCONN
#endif

#ifndef ManSuffix
#define ManSuffix               1x
#define ManDir			$(MANSOURCEPATH)1
#endif
#ifndef LibManSuffix
#define LibManSuffix            3x
#define LibmanDir		$(MANSOURCEPATH)3
#endif
#ifndef FileManSuffix
#define FileManSuffix           4
#endif

#ifndef StaticLibrary
#if !HasGcc
#define StaticLibrary(libpath,libname) -B static Concat(-L,libpath) Concat(-l,libname) -B dynamic
#endif
#endif

#ifdef i386Architecture
#include <xfree86.cf>
#endif

#include <sv4Lib.rules>
